package com.coderusk.dynalibs.rendering

object F {
    const val attachment = "attachment"
    const val useCompatPadding = "useCompatPadding"
    const val radius = "radius"
    const val maxCardElevation = "maxCardElevation"
    const val cardElevation = "cardElevation"
    const val cardBackgroundColor = "cardBackgroundColor"
    const val fillViewPort = "fillViewPort"
    const val maxWidth = "maxWidth"
    const val maxHeight = "maxHeight"
    const val dividerDrawable = "dividerDrawable"
    const val baselineAlignedChildIndex = "baselineAlignedChildIndex"
    const val baselineAligned = "baselineAligned"
    const val scrollY = "scrollY"
    const val tag = "tag"
    const val toolTipText = "toolTipText"
    const val textDirection = "textDirection"
    const val textAlignment = "textAlignment"
    const val soundEffectEnabled = "soundEffectEnabled"
    const val isVerticalScrollBarEnabled = "isVerticalScrollBarEnabled"
    const val isHorizontalScrollBarEnabled = "isHorizontalScrollBarEnabled"
    const val horizontalScrollbarTrackDrawable = "horizontalScrollbarTrackDrawable"
    const val verticalScrollbarTrackDrawable = "verticalScrollbarTrackDrawable"
    const val verticalScrollbarThumbDrawable = "verticalScrollbarThumbDrawable"
    const val horizontalScrollbarThumbDrawable = "horizontalScrollbarThumbDrawable"
    const val scrollbarSize = "scrollbarSize"
    const val scrollbarStyle = "scrollbarStyle"
    const val scrollbarFadeDuration = "scrollbarFadeDuration"
    const val scrollbarDefaultDelayBeforeFade = "scrollbarDefaultDelayBeforeFade"
    const val scrollX = "scrollX"
    const val scrollIndicator = "scrollIndicator"
    const val scrollIndicatorMask = "scrollIndicatorMask"
    const val screenReaderFocusable = "screenReaderFocusable"
    const val scaleY = "scaleY"
    const val scaleX = "scaleX"
    const val saveEnabled = "saveEnabled"
    const val rotationY = "rotationY"
    const val rotationX = "rotationX"
    const val rotation = "rotation"
    const val paddingVertical = "paddingVertical"
    const val paddingHorizontal = "paddingHorizontal"
    const val padding = "padding"
    const val outlineSpotShadowColor = "outlineSpotShadowColor"
    const val outlineAmbientShadowColor = "outlineAmbientShadowColor"
    const val nextFocusUp = "nextFocusUp"
    const val nextFocusRight = "nextFocusRight"
    const val nextFocusLeft = "nextFocusLeft"
    const val nextFocusForward = "nextFocusForward"
    const val nextFocusDown = "nextFocusDown"
    const val nextClusterForwardId = "nextClusterForwardId"
    const val minWidth = "minWidth"
    const val minHeight = "minHeight"
    const val isLongClickable = "isLongClickable"
    const val layoutDirection = "layoutDirection"
    const val layerType = "layerType"
    const val isKeyboardNavigationCluster = "isKeyboardNavigationCluster"
    const val keepScreenOn = "keepScreenOn"
    const val isScrollContainer = "isScrollContainer"
    const val importantForContentCapture = "importantForContentCapture"
    const val importantForAutofill = "importantForAutofill"
    const val importantForAccessibility = "importantForAccessibility"
    const val isHapticFeedbackEnabled = "isHapticFeedbackEnabled"
    const val foregroundTintMode = "foregroundTintMode"
    const val foreground = "foreground"
    const val forceHasOverlappingRendering = "forceHasOverlappingRendering"
    const val isFocusedByDefault = "isFocusedByDefault"
    const val focusableInTouchMode = "focusableInTouchMode"
    const val focusable = "focusable"
    const val fitsSystemWindows = "fitsSystemWindows"
    const val filterTouchesWhenObscured = "filterTouchesWhenObscured"
    const val fadingEdgeLength = "fadingEdgeLength"
    const val isVerticalFadingEdgeEnabled = "isVerticalFadingEdgeEnabled"
    const val isHorizontalFadingEdgeEnabled = "isHorizontalFadingEdgeEnabled"
    const val isScrollbarFadingEnabled = "isScrollbarFadingEnabled"
    const val elevation = "elevation"
    const val isDuplicateParentStateEnabled = "isDuplicateParentStateEnabled"
    const val defaultFocusHighlightEnabled = "defaultFocusHighlightEnabled"
    const val contextClickable = "contextClickable"
    const val contentDescription = "contentDescription"
    const val clipToOutline = "clipToOutline"
    const val clickable = "clickable"
    const val backgroundTintMode = "backgroundTintMode"
    const val compoundState = "compoundState"
    const val backgroundTint = "backgroundTint"
    const val item = "item"
    const val state = "state"
    const val states = "states"
    const val strokeMiter = "strokeMiter"
    const val strokeJoin = "strokeJoin"
    const val strokeCap = "strokeCap"
    const val shadowLayer = "shadowLayer"
    const val antialias = "antialias"
    const val blendMode = "blendMode"
    const val style = "style"
    const val color = "color"
    const val paintOptions = "paintOptions"
    const val pathData = "pathData"
    const val pathStandardHeight = "pathStandardHeight"
    const val pathStandardWidth = "pathStandardWidth"
    const val path = "path"
    const val isMeasureWithLargestChildEnabled = "isMeasureWithLargestChildEnabled"
    const val gravity = "gravity"
    const val insetRelative = "insetRelative"
    const val inset = "inset"
    const val insetEnd = "insetEnd"
    const val insetStart = "insetStart"
    const val insetBottom = "insetBottom"
    const val insetRight = "insetRight"
    const val insetTop = "insetTop"
    const val insetLeft = "insetLeft"
    const val options = "options"
    const val did = "did"
    const val layers = "layers"
    const val paddingRelative = "paddingRelative"
    const val paddingEnd = "paddingEnd"
    const val paddingStart = "paddingStart"
    const val paddingBottom = "paddingBottom"
    const val paddingRight = "paddingRight"
    const val paddingTop = "paddingTop"
    const val paddingLeft = "paddingLeft"
    const val paddingMode = "paddingMode"
    const val definition = "definition"
    const val gradientRadiusFraction = "gradientRadiusFraction"
    const val gradientRadiusPixel = "gradientRadiusPixel"
    const val gradientRadiusType = "gradientRadiusType"
    const val gradientRadius = "gradientRadius"
    const val gradientColors = "gradientColors"
    const val endColor = "endColor"
    const val centerColor = "centerColor"
    const val startColor = "startColor"
    const val center = "center"
    const val centerX = "centerX"
    const val centerY = "centerY"
    const val angle = "angle"
    const val gradientType = "gradientType"
    const val gradient = "gradient"
    const val cornerRadii = "cornerRadii"
    const val rounded = "rounded"
    const val useLevelForRing = "useLevelForRing"
    const val thicknessRatio = "thicknessRatio"
    const val thickness = "thickness"
    const val innerRadiusRatio = "innerRadiusRatio"
    const val innerRadius = "innerRadius"
    const val solidColorPressed = "solidColorPressed"
    const val solidColor = "solidColor"
    const val cornerRadius = "cornerRadius"
    const val cornerTopLeftRadius = "cornerTopLeftRadius"
    const val cornerTopRightRadius = "cornerTopRightRadius"
    const val cornerBottomRightRadius = "cornerBottomRightRadius"
    const val cornerBottomLeftRadius = "cornerBottomLeftRadius"
    const val shape = "shape"
    const val useLevelForGradient = "useLevelForGradient"
    const val width = "width"
    const val height = "height"
    const val size = "size"
    const val solidColorPressedWhenRippleUnsupported = "solidColorPressedWhenRippleUnsupported"
    const val solidColorDisabled = "solidColorDisabled"
    const val solidColorSelected = "solidColorSelected"
    const val strokeWidth = "strokeWidth"
    const val strokeColor = "strokeColor"
    const val strokeColorPressed = "strokeColorPressed"
    const val strokeColorDisabled = "strokeColorDisabled"
    const val strokeColorSelected = "strokeColorSelected"
    const val dashWidth = "dashWidth"
    const val dashGap = "dashGap"
    const val hairlineBordered = "hairlineBordered"
    const val shortDashed = "shortDashed"
    const val mediumDashed = "mediumDashed"
    const val longDashed = "longDashed"
    const val dashed = "dashed"
    const val pivotX = "pivotX"
    const val pivotY = "pivotY"
    const val transitionName = "transitionName"
    const val translationX = "translationX"
    const val translationY = "translationY"
    const val translationZ = "translationZ"
    const val visibility = "visibility"
    const val pivot = "pivot"
    const val fromDegrees = "fromDegrees"
    const val toDegrees = "toDegrees"
    const val degrees = "degrees"
    const val rotate = "rotate"
    const val scaleLevel = "scaleLevel"
    const val scaleGravity: String = "scaleGravity"
    const val scaleWidth: String = "scaleWidth"
    const val scaleHeight: String = "scaleHeight"
    const val scale = "scale"
    const val flip: String = "flip"
    const val flipOrientation= "flipOrientation"
    const val ripple: String = "ripple"
    const val rippleColor: String = "rippleColor"
    const val rippleRadius: String = "rippleRadius"
    const val base: String = "base"
    const val background: String = "background"
    const val autofillHints: String = "autofillHints"
    const val alpha: String = "alpha"
    const val type: String = "type"
    const val foregroundGravity: String = "foregroundGravity"
    const val layout_above = "layout_above"
    const val layout_alignBaseline = "layout_alignBaseline"
    const val layout_alignBottom = "layout_alignBottom"
    const val layout_alignEnd = "layout_alignEnd"
    const val layout_alignLeft = "layout_alignLeft"
    const val layout_alignRight = "layout_alignRight"
    const val layout_alignStart = "layout_alignStart"
    const val layout_alignTop = "layout_alignTop"
    const val layout_below = "layout_below"
    const val layout_toEndOf = "layout_toEndOf"
    const val layout_toLeftOf = "layout_toLeftOf"
    const val layout_toRightOf = "layout_toRightOf"
    const val layout_toStartOf = "layout_toStartOf"
    const val layout_alignParentBottom = "layout_alignParentBottom"
    const val layout_alignParentEnd = "layout_alignParentEnd"
    const val layout_alignParentLeft = "layout_alignParentLeft"
    const val layout_alignParentRight = "layout_alignParentRight"
    const val layout_alignParentStart = "layout_alignParentStart"
    const val layout_alignParentTop = "layout_alignParentTop"
    const val layout_alignWithParentIfMissing = "layout_alignWithParentIfMissing"
    const val layout_centerHorizontal = "layout_centerHorizontal"
    const val layout_centerInParent = "layout_centerInParent"
    const val layout_centerVertical = "layout_centerVertical"
    const val layout_margin = "layout_margin"
    const val layout_marginBottom = "layout_marginBottom"
    const val layout_marginEnd = "layout_marginEnd"
    const val layout_marginHorizontal = "layout_marginHorizontal"
    const val layout_marginLeft = "layout_marginLeft"
    const val layout_marginRight = "layout_marginRight"
    const val layout_marginStart = "layout_marginStart"
    const val layout_marginTop = "layout_marginTop"
    const val layout_marginVertical = "layout_marginVertical"
    const val constrainedHeight = "constrainedHeight"
    const val constrainedWidth = "constrainedWidth"
    const val circleAngle = "circleAngle"
    const val guidePercent = "guidePercent"
    const val horizontalBias = "horizontalBias"
    const val horizontalWeight = "horizontalWeight"
    const val matchConstraintPercentHeight = "matchConstraintPercentHeight"
    const val matchConstraintPercentWidth = "matchConstraintPercentWidth"
    const val verticalBias = "verticalBias"
    const val verticalWeight = "verticalWeight"
    const val baselineToBaseline = "baselineToBaseline"
    const val bottomToBottom = "bottomToBottom"
    const val bottomToTop = "bottomToTop"
    const val circleConstraint = "circleConstraint"
    const val circleRadius = "circleRadius"
    const val editorAbsoluteX = "editorAbsoluteX"
    const val editorAbsoluteY = "editorAbsoluteY"
    const val endToEnd = "endToEnd"
    const val endToStart = "endToStart"
    const val goneBottomMargin = "goneBottomMargin"
    const val goneEndMargin = "goneEndMargin"
    const val goneLeftMargin = "goneLeftMargin"
    const val goneRightMargin = "goneRightMargin"
    const val goneStartMargin = "goneStartMargin"
    const val goneTopMargin = "goneTopMargin"
    const val guideBegin = "guideBegin"
    const val guideEnd = "guideEnd"
    const val horizontalChainStyle = "horizontalChainStyle"
    const val leftToLeft = "leftToLeft"
    const val leftToRight = "leftToRight"
    const val matchConstraintDefaultHeight = "matchConstraintDefaultHeight"
    const val matchConstraintDefaultWidth = "matchConstraintDefaultWidth"
    const val matchConstraintMaxHeight = "matchConstraintMaxHeight"
    const val matchConstraintMaxWidth = "matchConstraintMaxWidth"
    const val matchConstraintMinHeight = "matchConstraintMinHeight"
    const val matchConstraintMinWidth = "matchConstraintMinWidth"
    const val orientation = "orientation"
    const val rightToLeft = "rightToLeft"
    const val rightToRight = "rightToRight"
    const val startToEnd = "startToEnd"
    const val startToStart = "startToStart"
    const val topToBottom = "topToBottom"
    const val topToTop = "topToTop"
    const val verticalChainStyle = "verticalChainStyle"
    const val constraintTag = "constraintTag"
    const val dimensionRatio = "dimensionRatio"
    const val layout_weight: String = "layout_weight"
    const val layout_gravity: String = "layout_gravity"
    const val layout_height: String = "layout_height"
    const val layout_width: String = "layout_width"
    const val id: String = "id"
    const val actions: String = "actions"
    const val attributes: String = "attributes"
    const val children: String = "children"
    const val drawables = "drawables"
}